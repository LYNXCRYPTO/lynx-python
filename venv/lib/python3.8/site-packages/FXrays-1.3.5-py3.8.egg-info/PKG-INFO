Metadata-Version: 1.2
Name: FXrays
Version: 1.3.5
Summary: Computes extremal rays with filtering
Home-page: http://t3m.computop.org
Author: Marc Culler and Nathan M. Dunfield
Author-email: culler@marc-culler.info, nathan@dunfield.info
License: GPLv2+
Description: This package is a small, fast implementation of an algorithm for
        finding extremal rays of a polyhedral cone, with filtering.  It is
        intended for finding normal surfaces in triangulated 3-manifolds, and
        therefore does not implement various features that might be useful for
        general extremal ray problems.
        
        The setup is this.  Define the support of a vector v in R^n to be the
        set of indices i such that v_i is non-zero.  We are given an integer
        matrix M, typically with many more columns than rows, and a list of
        "illegal supports".  The support of a vector is illegal if its support
        contains one of the illegal supports on the list.
        
        We want to find all the extremal rays of the cone
        (Null space of M) intersect (positive orthant),
        which are generated by vectors with legal support. (The restriction to
        vector with legal support is what is meant by "filtering".)
        
        The algorithm is due to Dave Letscher, and incorporates ideas of Komei
        Fukuda's.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: C
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3
