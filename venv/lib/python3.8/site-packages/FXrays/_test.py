from .FXraysmodule import find_Xrays

def test0():
    """
    >>> test0()     # doctest: +NORMALIZE_WHITESPACE
    [(0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
     (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0),
     (0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2),
     (0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0),
     (0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1),
     (0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0),
     (0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
     (0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0),
     (1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
     (1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0)]
    """
    rows =  10 
    columns = 27 
    matrix = [
        -1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1,0,
        1,0,-1,0,-1,1,0,0,0,0,0,0,-1,1,0,0,-1,1,1,0,-1,0,0,0,0,-2,2,
        0,-1,1,-1,1,0,0,0,0,0,0,0,1,0,-1,1,0,-1,0,0,0,0,0,0,1,0,-1,
        0,-1,1,1,0,-1,0,-1,1,0,0,0,0,0,0,-1,1,0,-1,1,0,1,0,-1,0,0,0,
        1,0,-1,1,0,-1,0,0,0,0,-1,1,0,-1,1,0,0,0,0,0,0,0,-1,1,-1,1,0,
        -1,1,0,-1,1,0,0,0,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,-1,1,2,0,-2,1,0,-1,0,0,0,0,-1,1,1,0,-1,0,-1,1,0,0,0,
        0,0,0,0,0,0,-1,1,0,0,-1,1,1,0,-1,0,0,0,0,-1,1,0,0,0,1,0,-1,
        0,0,0,0,0,0,0,-1,1,-1,1,0,0,0,0,1,0,-1,0,-1,1,1,0,-1,0,0,0,
        0,0,0,0,0,0,-1,1,0,1,0,-1,0,-1,1,-1,1,0,0,0,0,-1,1,0,0,0,0]

    return sorted(find_Xrays(rows, columns, matrix, print_progress=False))
    
def test1():
    """
    >>> test1()     # doctest: +NORMALIZE_WHITESPACE
    [(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 0),
     (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0),
     (0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
     (0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0),
     (0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0),
     (0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0),
     (0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0),
     (0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
     (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0),
     (1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1),
     (1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)]
    """
    rows = 11
    columns = 30
    matrix = [
        -1,1,0,0,0,0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,2,
        -1,1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-2,2,0,0,0,0,
        1,0,-1,1,0,-1,0,0,0,1,0,-1,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,1,-2,
        1,0,-1,0,0,0,0,-1,1,0,-1,1,0,0,0,-1,1,0,0,0,0,0,0,0,0,-1,1,0,0,0,
        0,-1,1,-1,1,0,0,0,0,1,0,-1,1,0,-1,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,
        0,-1,1,0,0,0,0,0,0,0,-1,1,0,0,0,0,0,0,0,-1,1,0,0,0,1,0,-1,-1,1,0,
        0,0,0,1,-1,0,0,0,0,0,0,0,-1,0,1,-1,1,0,0,0,0,1,0,-1,0,0,0,0,0,0,
        0,0,0,-1,1,0,-2,2,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,-1,1,1,0,-1,0,0,0,
        0,0,0,0,0,0,1,0,-1,0,0,0,0,-1,1,1,0,-1,0,-1,1,1,0,-1,0,0,0,0,0,0,
        0,0,0,0,0,0,0,-1,1,0,0,0,-1,1,0,0,0,0,1,0,-1,-1,1,0,0,-1,1,0,0,0,
        0,0,0,0,0,0,0,0,0,-1,1,0,1,0,-1,0,-1,1,1,0,-1,0,-1,1,0,0,0,0,0,0]

    return sorted(find_Xrays(rows, columns, matrix, print_progress=False))

def test2():
    """
    >>> test2()     # doctest: +NORMALIZE_WHITESPACE
    [(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 1, 0, 0, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0),
     (0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0),
     (0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1),
     (0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 1, 0, 2, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
     (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
     (1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
     (1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0),
     (1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
     (2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)]
    """
    rows = 15
    columns = 42
    matrix = [
        -1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,1,0,-1,0,0,0,0,-2,2,-1,1,0,
        1,0,-1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,0,0,0,2,0,-2,1,1,-2,
        0,-1,1,0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,1,0,-1,0,0,0,0,0,0,-1,1,0,0,0,0,
        0,-1,1,1,0,-1,0,0,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,2,0,0,0,0,0,0,
        1,0,-1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        -1,1,0,0,0,0,1,-1,0,0,-1,1,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,-1,1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,0,-1,1,1,0,-1,0,0,0,0,0,0,
        0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,-1,1,0,0,0,0,-1,1,0,-1,1,0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,
        0,0,0,-1,1,0,0,0,0,0,0,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,2,-1,0,0,0,0,0,0,
        0,0,0,0,0,0,1,0,-1,-1,1,0,0,0,0,0,0,0,-1,1,0,1,0,-1,0,0,0,1,0,-1,0,-1,1,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,-1,1,0,0,0,0,-1,1,0,-1,1,0,-1,1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,-1,1,1,0,-1,0,-1,1,0,0,0,0,-1,1,1,0,-1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,1,0,-1,0,-1,1,1,0,-1,0,-1,1,0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,0,-2,2]
        
    return sorted(find_Xrays(rows, columns, matrix, print_progress=False))

def magic5():
    """
    >>> magic5()
    1940
    """
    rows = 11
    columns = 25
    matrix = [
        1, 1, 1, 1, 1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 
        0, 1, 1, 1, 1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
        1, 0, 1, 1, 1, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 
        1, 1, 0, 1, 1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 
        1, 1, 1, 0, 1, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 
        1, 1, 1, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 
        0, 1, 1, 1, 1, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 
        1, 1, 1, 1, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0]

    return len(find_Xrays(rows, columns, matrix, filtering=False,
                                 modp=True, print_progress=False))


def t12345_matrix():
    """
    >>> rows, cols, matrix = t12345_matrix()
    >>> len(find_Xrays(rows, cols, matrix, filtering=False, print_progress=False))
    1525
    >>> sorted(find_Xrays(rows, cols, matrix, filtering=True, print_progress=False))  # doctest: +NORMALIZE_WHITESPACE
    [(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0), 
     (0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0), 
     (0, 0, 0, 0, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 4, 0, 4, 0, 0, 6, 0, 3, 0, 0),
     (0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0),
     (0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0),
     (0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 6, 0, 3, 0, 0),
     (0, 0, 0, 0, 3, 0, 0, 1, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
     (0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0, 6, 4, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 6, 0),
     (0, 0, 1, 0, 0, 6, 4, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0),
     (0, 0, 1, 4, 0, 0, 0, 0, 6, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0),
     (0, 0, 1, 4, 0, 0, 0, 0, 6, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 6, 0),
     (0, 0, 2, 0, 0, 4, 0, 2, 0, 1, 0, 0, 0, 0, 4, 4, 0, 0, 1, 0, 0, 0, 0, 2),
     (0, 0, 2, 0, 2, 0, 0, 0, 4, 1, 0, 0, 4, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 2),
     (0, 0, 3, 0, 0, 10, 4, 0, 0, 0, 0, 2, 0, 0, 6, 0, 2, 0, 0, 0, 0, 0, 0, 2),
     (0, 0, 3, 4, 0, 0, 0, 0, 10, 0, 0, 2, 0, 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, 2),
     (0, 0, 7, 0, 0, 18, 4, 0, 0, 0, 0, 2, 0, 0, 12, 2, 0, 0, 2, 0, 0, 0, 0, 6),
     (0, 0, 7, 4, 0, 0, 0, 0, 18, 0, 0, 2, 2, 0, 0, 0, 0, 12, 2, 0, 0, 0, 0, 6),
     (0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0),
     (0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0),
     (0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 2, 0, 1, 0, 1, 0, 0),
     (0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
     (0, 2, 0, 3, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 3, 0, 0, 1, 0, 1, 0, 0),
     (0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 1),
     (0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 2, 1, 0, 0, 3, 0, 0, 0, 0, 1),
     (0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 2, 4, 0, 0, 0, 6, 0, 0, 0, 4, 1, 0, 0),
     (0, 4, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0),
     (0, 4, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
     (0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 0, 6, 0, 4, 0, 0, 0, 0, 4, 1, 0, 0),
     (1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0),
     (1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0, 0, 5, 0),
     (3, 0, 0, 0, 6, 0, 3, 0, 0, 0, 13, 0, 5, 0, 0, 0, 0, 10, 9, 0, 0, 0, 0, 5),
     (3, 0, 0, 3, 0, 0, 0, 6, 0, 0, 13, 0, 0, 0, 10, 5, 0, 0, 9, 0, 0, 0, 0, 5),
     (4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 10, 4, 0, 0, 0, 14, 0, 0, 0, 12, 1, 0, 0),
     (4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 10, 0, 14, 0, 4, 0, 0, 0, 0, 12, 1, 0, 0),
     (8, 0, 0, 0, 6, 0, 8, 0, 0, 0, 4, 0, 0, 24, 0, 0, 0, 20, 0, 10, 0, 7, 0, 0),
     (8, 0, 0, 8, 0, 0, 0, 6, 0, 0, 4, 0, 0, 0, 20, 0, 24, 0, 0, 10, 0, 7, 0, 0)]
    """
    rows = 8
    columns = 24
    matrix =  [1, 1, -2, -1, 0, 1, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
               -2, 0, 2, 0, 1, -1, 0, 1, -1, -2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0,
               1, -1, 0, 1, -1, 0, 1, -1, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 0, 0, 0, 2, -1, -1,
               0, 0, 0, 1, -1, 0, 0, 1, -1, 1, -1, 0, 0, 0, 0, -1, 0, 1, 1, -1, 0, 0, 0, 0,
               0, 0, 0, 0, 1, -1, 1, -1, 0, 1, -1, 0, -1, 0, 1, 0, 0, 0, 1, -1, 0, 0, 0, 0,
               0, 0, 0, -1, 0, 1, -1, 0, 1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 0, 0, 0, 0, 0,
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, -1, 1, 0, -1, 1, -2, 0, 2, 0, 1, -1,
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 1, -1, -2, 0, 2]

    return rows, columns, matrix
